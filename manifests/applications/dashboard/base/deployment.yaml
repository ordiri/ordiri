apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashboard
  template:
    metadata:
      labels:
        app: dashboard
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-limits-cpu: 100m
        vault.hashicorp.com/agent-requests-cpu: 50m
        vault.hashicorp.com/agent-limits-mem: 128Mi
        vault.hashicorp.com/agent-requests-mem: 64Mi
        vault.hashicorp.com/agent-init-first: 'true'
        vault.hashicorp.com/role: dashboard
        vault.hashicorp.com/agent-inject-secret-oidc: identity/oidc/client/dashboard
        vault.hashicorp.com/agent-inject-template-oidc: |
          {{- with secret "identity/oidc/client/dashboard" -}}
          export oidc_client_id="{{ .Data.client_id }}"
          export oidc_client_secret="{{ .Data.client_secret }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-bazarr: secret/data/media/bazarr/api
        vault.hashicorp.com/agent-inject-template-bazarr: |
          {{- with secret "secret/data/media/bazarr/api" -}}
          export bazarr_api_token="{{ .Data.data.token }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-plex: secret/data/media/plex/api
        vault.hashicorp.com/agent-inject-template-plex: |
          {{- with secret "secret/data/media/plex/api" -}}
          export plex_api_token="{{ .Data.data.token }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-sonarr: secret/data/media/sonarr/api
        vault.hashicorp.com/agent-inject-template-sonarr: |
          {{- with secret "secret/data/media/sonarr/api" -}}
          export sonarr_api_token="{{ .Data.data.token }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-radarr: secret/data/media/radarr/api
        vault.hashicorp.com/agent-inject-template-radarr: |
          {{- with secret "secret/data/media/radarr/api" -}}
          export radarr_api_token="{{ .Data.data.token }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-sabnzbd: secret/data/media/sabnzbd/api
        vault.hashicorp.com/agent-inject-template-sabnzbd: |
          {{- with secret "secret/data/media/sabnzbd/api" -}}
          export sabnzbd_api_token="{{ .Data.data.token }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-overseer: secret/data/media/overseer/api
        vault.hashicorp.com/agent-inject-template-overseer: |
          {{- with secret "secret/data/media/overseer/api" -}}
          export overseer_api_token="{{ .Data.data.token }}"
          {{- end }}
    spec:
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      serviceAccount: dashboard
      volumes:
      - name: media-nfs
        nfs:
          path: /homelab/media
          server: ceph.homelab.dmann.xyz
      - name: dashboard-tls
        secret:
          secretName: dashboard-tls
      - name: dashboard-config-tpl
        configMap:
          name: dashboard-config
      - name: dashboard-config
        emptyDir: {}
      initContainers:
      - name: config-template
        image: harbor.dmann.dev/docker.io/bhgedigital/envsubst:latest
        command:
        - sh
        - -c
        args:
        - |
          source /vault/secrets/bazarr; 
          source /vault/secrets/plex;
          source /vault/secrets/radarr;
          source /vault/secrets/overseer;
          source /vault/secrets/sonarr;
          source /vault/secrets/sabnzbd;
          source /vault/secrets/oidc;
          cat /opt/app-config/bookmarks.yaml.tpl | envsubst > /app/config/bookmarks.yaml;
          cat /opt/app-config/services.yaml.tpl | envsubst > /app/config/services.yaml;
          cat /opt/app-config/settings.yaml.tpl | envsubst > /app/config/settings.yaml;
          cat /opt/app-config/widgets.yaml.tpl | envsubst > /app/config/widgets.yaml;
        volumeMounts:
        - name: dashboard-config-tpl
          mountPath: /opt/app-config
        - name: dashboard-config
          mountPath: /app/config
      containers:
      - name: dashboard
        image: ghcr.io/benphelps/homepage:latest
        volumeMounts:
        - name: dashboard-config
          mountPath: /app/config
        readinessProbe:
          httpGet:
            path: /
            port: webui
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: webui
          initialDelaySeconds: 5
          periodSeconds: 10
        ports:
        - name:  webui
          containerPort: 3000
          protocol: TCP
        resources:
      - name: oauth2-proxy
        command:
        - sh
        - -c
        args:
        - |
          source /vault/secrets/oidc;
          /bin/oauth2-proxy \
          --provider=oidc \
          --email-domain=* \
          --oidc-email-claim=sub \
          --upstream=http://127.0.0.1:3000 \
          --https-address=[::]:4180 \
          --tls-cert-file=/opt/dashboard-tls/tls.crt \
          --tls-key-file=/opt/dashboard-tls/tls.key \
          --provider-display-name="Vault" \
          --client-id="${oidc_client_id}" \
          --client-secret="${oidc_client_secret}" \
          --redirect-url="https://dashboard.dmann.xyz" \
          --oidc-issuer-url="https://vault.homelab.dmann.xyz:8200/v1/identity/oidc/provider/default" \
          --cookie-secret=secret12secret12 \
          --force-https \
          --footer "-" \
          --banner "-" \
          --custom-sign-in-logo "-" \
          --ping-user-agent=KubernetesHealthCheck
        env: []
        image: harbor.dmann.dev/quay.io/oauth2-proxy/oauth2-proxy:latest
        ports:
        - containerPort: 4180
          protocol: TCP
          name: oauth2-proxy
        resources: 
        volumeMounts:
        - name: dashboard-tls
          mountPath: /opt/dashboard-tls
        livenessProbe:
          httpGet:
            path: /ping
            port: oauth2-proxy
            scheme: HTTPS
            httpHeaders:
            - name:  UserAgent
              value: KubernetesHealthCheck
          initialDelaySeconds: 10
          timeoutSeconds: 5
        # readinessProbe: # https://github.com/oauth2-proxy/oauth2-proxy/pull/1839 pending release
        #   httpGet:
        #     path: /ready
        #     port: oauth2-proxy
        #     scheme: HTTPS
        #   initialDelaySeconds: 10
        #   timeoutSeconds: 5
        #   successThreshold: 2
        #   periodSeconds: 10