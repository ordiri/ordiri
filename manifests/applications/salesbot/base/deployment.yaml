apiVersion: apps/v1
kind: Deployment
metadata:
  name: salesbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: salesbot
  template:
    metadata:
      labels:
        app: salesbot
    spec:
      volumes:
      - name: caddyfile
        configMap:
          name: caddyfile-app
      - name: salesbot-tls
        secret:
          secretName: salesbot-tls
      - name: gcloud-credentials
        secret:
          secretName: gcloud-credentials
      containers:
      - name: caddy
        image: docker.io/caddy:latest
        volumeMounts:
        - name: caddyfile
          mountPath: /opt/caddyfile
        - name: salesbot-tls
          mountPath: /opt/salesbot-tls
        readinessProbe:
          httpGet:
            path: /live
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /live
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        command:
        - caddy
        args:
        - run
        - --config
        - /opt/caddyfile/Caddyfile
        ports:
        - name:  http
          containerPort: 80
          protocol: TCP
        - name:  https
          containerPort: 443
          protocol: TCP
        - name:  metrics
          containerPort: 8150
          protocol: TCP
        resources:
      - name: salesbot
        image: harbor.dmann.dev/default/salesbot:pending
        envFrom:
        - secretRef:
            name: openai-credentials
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /opt/gcloud/credentials.json

        # readinessProbe:
        #   httpGet:
        #     path: /live
        #     port: http
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        # livenessProbe:
        #   httpGet:
        #     path: /live
        #     port: http
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        volumeMounts:
        - name: gcloud-credentials
          mountPath: /opt/gcloud
        command:
        - /salesbot
        workingDir: /workspace
        args:
        - server
        - --static-dir
        - /staticfiles
        ports:
        - name: salesbotws
          containerPort: 8080
          protocol: TCP