apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: home-assistant
spec:
  serviceName: home-assistant
  replicas: 1
  selector:
    matchLabels:
      app: home-assistant
  template:
    metadata:
      labels:
        app: home-assistant
    spec:
      hostNetwork: false
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      volumes:
      - name: home-assistant-tls
        secret:
          secretName: home-assistant-tls
          defaultMode: 0777
      - name: home-assistant-config
        configMap:
          name: home-assistant-config
      - name: home-assistant-packages
        configMap:
          name: home-assistant-packages
      - name: nfs-volume
        nfs:
          server: ceph.homelab.dmann.xyz
          path: /homelab/media
      - name: mdns-tunnel-config
        configMap:
          name: mdns-tunnel-config
      initContainers:
      - name: waiter
        image: docker.io/alpine/k8s:1.27.2
        command:
        - /bin/sh
        - -euc
        - |
          
          function update_cfg() {
            mkdir -p /config/packages
            cp -LR /kube-config/*  /nfs-volume/home-assistant/*.y*ml  /config/.
            cp -LR /kube-packages/* /config/packages/.
            
          }
          while ! nc -z postgres.home-assistant.svc.cluster.local 5432; do
            echo "Waiting for Postgres to boot";
            sleep 1;
          done;

          echo "Postgres is ready"
          
          update_cfg

          echo "Config was updated"
        volumeMounts:
        - name: data
          mountPath: /config

        - name: nfs-volume
          mountPath: /nfs-volume

        - name: home-assistant-packages
          mountPath: /kube-packages
        - name: home-assistant-config
          mountPath: /kube-config
          readOnly: true
      containers:
      - name: config-reloader
        image: docker.io/alpine/k8s:1.27.2
        command:
        - /bin/sh
        - -euc
        - |
          function update_cfg() {
            mkdir -p /config/packages
            cp -LR /kube-config/*  /nfs-volume/home-assistant/*.y*ml  /config/.
            cp -LR /kube-packages/* /config/packages/.
          }
          update_cfg

          apk update && apk add inotify-tools;
          inotifywait \
              --event create --event delete \
              --event modify --event move \
              --format "%e %w%f" \
              --monitor \
              --syslog --quiet --recursive \
              /kube-config /nfs-volume/home-assistant |
          while read CHANGED;
          do
              echo "$CHANGED"
              update_cfg
          done
        volumeMounts:
        - name: data
          mountPath: /config
        - name: nfs-volume
          mountPath: /nfs-volume
        - name: home-assistant-packages
          mountPath: /kube-packages
        - name: home-assistant-config
          mountPath: /kube-config
          readOnly: true
      - name: home-assistant
        image: ghcr.io/home-assistant/home-assistant:stable@sha256:8e069fcfddbd95c0acff88b9e515e3b208c2a5b4ad801a8f0cb8b55be417fc45
        securityContext:
          capabilities:
            add:
            - CAP_NET_RAW
        volumeMounts:
        - name: data
          mountPath: /config
        - name: nfs-volume
          mountPath: /media
        - name: nfs-volume
          mountPath: /config/backups
          subPath: backups/home-assistant
        - name: nfs-volume
          mountPath: /config/custom_components
          subPath: home-assistant/custom_components
        - name: home-assistant-tls
          mountPath: /opt/home-assistant-tls
        ports:
        - name:  webui
          containerPort:  8123
          protocol: TCP
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          limits:
            memory: "2Gi"
            cpu: "1024m"
        readinessProbe:
          httpGet:
            path: /manifest.json
            port: webui
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - "nc -z postgres.home-assistant.svc.cluster.local 5432 && curl -XGET -k https://127.0.0.1:8123/manifest.json"
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 10
          timeoutSeconds: 30
      - name: mdns-tunnel
        image: docker.io/toxuin/mdns-tunneller
        resources:
          requests:
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        env: []
        ports:
        - name: tunnel
          containerPort: 42069
          protocol: TCP
        volumeMounts:
        - name: mdns-tunnel-config
          mountPath: /app/config
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      storageClassName: ceph-retain
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
        #   limits:
        #     memory: "4Gi"
        #     cpu: "4"