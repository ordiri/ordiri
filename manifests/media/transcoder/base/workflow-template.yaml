apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: transcode
spec:
  entrypoint: main
  serviceAccountName: transcode-wf-sa
  arguments:
    parameters: []
  templates:
  - name: transcode-blueray
    steps:
    - - name: generate
        template: find-media
        arguments:
          parameters:
          - name: filter
            value: '*.iso'
          - name: directory
            value: '/media/downloads/complete'
    # Iterate over the list of numbers generated by the generate step above
    - - name: transcode
        template: rip-blueray
        arguments:
          parameters:
          - name: file
            value: "{{item}}"
        withParam: "{{steps.generate.outputs.result}}"
  - name: rip-blueray
    inputs: 
      parameters:
      - name: file
    volumes:
    - name: media-nfs
      nfs:
        path: /homelab/media
        server: ceph.homelab.dmann.xyz
    container:
      image: harbor.dmann.dev/docker.io/jlesage/makemkv:v1.22.2
      command:
      - /opt/makemkv/bin/makemkvcon
      args:
      - --robot
      - --decrypt
      - --cache=1024MB
      - mkv
      - 'iso:{{inputs.parameters.file}}'
      - all
      - /media/transcoded
      volumeMounts:
      - name: media-nfs
        mountPath: /media
  - name: find-media
    inputs: 
      parameters:
      - name: filter
      - name: directory
    volumes:
    - name: media-nfs
      nfs:
        path: /homelab/media
        server: ceph.homelab.dmann.xyz
    container:
      image: alpine
      command:
      - /usr/bin/find
      args:
      - '{{inputs.parameters.directory}}'
      - -not
      - -path
      - '*_UNPACK*'
      - -and
      - -iname
      - '{{inputs.parameters.filter}}'
      - -printf "\"%p\"\n"
      volumeMounts:
      - name: media-nfs
        mountPath: /media