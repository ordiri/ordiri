apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: transcode
spec:
  entrypoint: main
  serviceAccountName: transcode-wf-sa
  arguments:
    parameters: []
  templates:
  - name: transcode-blueray
    steps:
    - - name: generate
        template: find-media
        arguments:
          parameters:
          - name: filter
            value: '*.iso'
          - name: directory
            value: '/media/downloads/complete'
    # Iterate over the list of numbers generated by the generate step above
    - - name: transcode
        template: rip-blueray
        arguments:
          parameters:
          - name: file
            value: "{{item.filename}}"
        withParam: "{{steps.generate.outputs.result}}"
  - name: rip-blueray
    parallelism: 2
    inputs:
      parameters:
      - name: file
    volumes:
    - name: media-nfs
      nfs:
        path: /homelab/media
        server: ceph.homelab.dmann.xyz
    - name: config
      emptyDir: {}
    container:
      image: harbor.dmann.dev/docker.io/jlesage/makemkv:v1.22.2
      env:
      - name: BETA_KEY
        value: T-2KF3Fsx1NkAkuKtr3o47Fv4Bf4YoFgqnxEPqm9sTPIT1Ya70CTlIcRXbSPPzHIDq7z
      command:
      - sh
      - -c 
      args:
      - |
        outputdir=$(dirname "{{inputs.parameters.file}}");
        mkdir -p /config/.MakeMKV "${outputdir}/transcoded"; 
        echo 'app_Key = "$(BETA_KEY)"' > /config/.MakeMKV/settings.conf;
        /opt/makemkv/bin/makemkvcon --robot \
          --decrypt \
          --cache=1024 \
          --minlength=1800 \
          --noscan \
          --upnp=false \
          --progress=-same \
          mkv 'iso:{{inputs.parameters.file}}' all "${outputdir}/transcoded";
      volumeMounts:
      - name: media-nfs
        mountPath: /media
      - name: config
        mountPath: /config
  - name: find-media
    inputs:
      parameters:
      - name: filter
      - name: directory
    volumes:
    - name: media-nfs
      nfs:
        path: /homelab/media
        server: ceph.homelab.dmann.xyz
    container:
      image: harbor.dmann.dev/docker.io/alpine/k8s:1.25.5
      command:
      - /bin/sh
      - -x
      - -c
      args:
      - |
        /usr/bin/find '{{inputs.parameters.directory}}' \
          -not -path '*_UNPACK*' \
          -and \
          -iname '{{inputs.parameters.filter}}' \
          -exec printf "{\"filename\": \"{}\"}\n" ';' \
          | jq -s '.| flatten'
      volumeMounts:
      - name: media-nfs
        mountPath: /media