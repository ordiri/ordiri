apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

components:
- ../../../common/images

resources:
- prometheus-service.yaml
- grafana-service.yaml
- certificate.yaml
- vault-rbac.yaml

helmCharts:
- name: kube-prometheus-stack
  repo: https://prometheus-community.github.io/helm-charts
  version: 48.3.1
  releaseName: prometheus
  namespace: monitoring
  includeCRDs: true
  valuesInline:
    kubeEtcd:
      enabled: false
    prometheus:
      prometheusSpec:
        serviceMonitorSelectorNilUsesHelmValues: false
        podMetadata:
          annotations:
            vault.hashicorp.com/agent-inject: 'true'
            vault.hashicorp.com/agent-limits-cpu: 100m
            vault.hashicorp.com/agent-requests-cpu: 50m
            vault.hashicorp.com/agent-limits-mem: 128Mi
            vault.hashicorp.com/agent-requests-mem: 64Mi
            vault.hashicorp.com/agent-inject-secret-home-assistant-token: secret/data/prometheus/home-assistant-api
            vault.hashicorp.com/agent-inject-template-home-assistant-token: |
              {{ "{{" }}- with secret "secret/data/prometheus/home-assistant-api" -{{"}}"}}
              {{ "{{" }} .Data.data.token {{"}}"}}
              {{ "{{" }}- end -{{"}}"}}
            vault.hashicorp.com/agent-inject-token: "true"
            vault.hashicorp.com/role: prometheus
            
        additionalScrapeConfigs: 
        - job_name: home-assistant
          scrape_interval: 10s
          metrics_path: /api/prometheus

          # Long-Lived Access Token
          authorization:
            credentials_file: /vault/secrets/home-assistant-token
          tls_config: 
            # insecure_skip_verify: true
            server_name: home-assistant.dmann.xyz

          scheme: https
          static_configs:
          - targets: ['home-assistant.home-assistant.svc.cluster.local:8123']
        - job_name: vault
          scrape_interval: 10s
          metrics_path: /v1/sys/metrics
          params:
            format: ['prometheus']
          scheme: https
          authorization:
            credentials_file: /vault/secrets/token
          static_configs:
          - targets: ['vault.homelab.dmann.xyz:8200']

        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 100Gi

    grafana:
      dashboards:
        ordiri:
          hashicorp-vault:
            gnetId: 12904
            revision: 2
            datasource: prometheus
          cert-manager:
            gnetId: 11001
            revision: 1
            datasource: prometheus
          argocd:
            gnetId: 14584
            revision: 1
            datasource: prometheus
          felix:
            gnetId: 12175
            revision: 1
            datasource: prometheus
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'ordiri'
            orgId: 1
            folder: ''
            type: file
            updateIntervalSeconds: 10
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ordiri
      defaultDashboardsTimezone: Australia/Sydney
      sidecar:
        datasources:
          skipReload: true
          initDatasources: true
        dashboards:
          skipReload: true
        plugins:
          skipReload: true
          initPlugins: true
        notifiers:
          skipReload: true
          initNotifiers: true
      extraContainerVolumes:
      - name: grafana-tls
        secret:
          secretName: grafana-tls

      grafana.ini:
        server:
          protocol: https
          domain: grafana.dmann.dev
          root_url: https://grafana.dmann.dev/
          cert_file: /opt/grafana-tls/tls.crt
          cert_key: /opt/grafana-tls/tls.key
        auth.generic_oauth:
          name: OAuth
          icon: signin
          enabled: true
          client_id: $__file{/vault/secrets/oidc-id}
          client_secret: $__file{/vault/secrets/oidc-secret}
          scopes: openid profile email groups user
          empty_scopes: false
          auth_url: https://vault.homelab.dmann.xyz:8200/ui/vault/identity/oidc/provider/default/authorize
          token_url: https://vault.homelab.dmann.xyz:8200/v1/identity/oidc/provider/default/token
          api_url: https://vault.homelab.dmann.xyz:8200/v1/identity/oidc/provider/default/userinfo
          allowed_domains: dmann.xyz dmann.dev
          allow_sign_up: true
          tls_skip_verify_insecure: false

patches:
- patch: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: prometheus-grafana
      namespace: monitoring
    spec:
      template:
        metadata:
          annotations:
            vault.hashicorp.com/agent-inject: 'true'
            vault.hashicorp.com/role: grafana
            vault.hashicorp.com/agent-inject-secret-oidc-id: identity/oidc/client/grafana
            vault.hashicorp.com/agent-inject-template-oidc-id: |
              {{- with secret "identity/oidc/client/grafana" -}}
              {{ .Data.client_id }}
              {{- end }}
            vault.hashicorp.com/agent-inject-secret-oidc-secret: identity/oidc/client/grafana
            vault.hashicorp.com/agent-inject-template-oidc-secret: |
              {{- with secret "identity/oidc/client/grafana" -}}
              {{ .Data.client_secret }}
              {{- end }}
        spec:
          dnsConfig:
            options:
            - name: ndots
              value: "1"
          containers:
          - name: grafana
            volumeMounts:
            - mountPath: /opt/grafana-tls
              name: grafana-tls
            readinessProbe:
              httpGet:
                scheme: HTTPS
              initialDelaySeconds: 30
            livenessProbe:
              httpGet:
                scheme: HTTPS