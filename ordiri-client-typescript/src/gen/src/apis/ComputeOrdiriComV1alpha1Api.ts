/* tslint:disable */
/* eslint-disable */
/**
 * openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine,
  ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment,
  ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentList,
  ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineList,
  ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet,
  ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetList,
  IoK8sApiAutoscalingV1Scale,
  IoK8sApimachineryPkgApisMetaV1APIResourceList,
  IoK8sApimachineryPkgApisMetaV1DeleteOptions,
  IoK8sApimachineryPkgApisMetaV1Status,
  IoK8sApimachineryPkgApisMetaV1WatchEvent,
} from '../models';
import {
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineToJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentFromJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentToJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentListFromJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentListToJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineListFromJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineListToJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetFromJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetToJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetListFromJSON,
    ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetListToJSON,
    IoK8sApiAutoscalingV1ScaleFromJSON,
    IoK8sApiAutoscalingV1ScaleToJSON,
    IoK8sApimachineryPkgApisMetaV1APIResourceListFromJSON,
    IoK8sApimachineryPkgApisMetaV1APIResourceListToJSON,
    IoK8sApimachineryPkgApisMetaV1DeleteOptionsFromJSON,
    IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON,
    IoK8sApimachineryPkgApisMetaV1StatusFromJSON,
    IoK8sApimachineryPkgApisMetaV1StatusToJSON,
    IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON,
    IoK8sApimachineryPkgApisMetaV1WatchEventToJSON,
} from '../models';

export interface CreateComputeOrdiriComV1alpha1VirtualMachineRequest {
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface CreateComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest {
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface CreateComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest {
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineDeploymentRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineReplicaSetRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface DeleteComputeOrdiriComV1alpha1VirtualMachineRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface DeleteComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface DeleteComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface ListComputeOrdiriComV1alpha1VirtualMachineRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface ListComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface ListComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface PatchComputeOrdiriComV1alpha1VirtualMachineRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}

export interface PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}

export interface PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}

export interface PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}

export interface PatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}

export interface PatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}

export interface PatchComputeOrdiriComV1alpha1VirtualMachineRestartRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}

export interface PatchComputeOrdiriComV1alpha1VirtualMachineStatusRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}

export interface ReadComputeOrdiriComV1alpha1VirtualMachineRequest {
    name: string;
    pretty?: string;
}

export interface ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest {
    name: string;
    pretty?: string;
}

export interface ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest {
    name: string;
    pretty?: string;
}

export interface ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest {
    name: string;
    pretty?: string;
}

export interface ReadComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest {
    name: string;
    pretty?: string;
}

export interface ReadComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest {
    name: string;
    pretty?: string;
}

export interface ReadComputeOrdiriComV1alpha1VirtualMachineRestartRequest {
    name: string;
    pretty?: string;
}

export interface ReadComputeOrdiriComV1alpha1VirtualMachineStatusRequest {
    name: string;
    pretty?: string;
}

export interface ReplaceComputeOrdiriComV1alpha1VirtualMachineRequest {
    name: string;
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest {
    name: string;
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest {
    name: string;
    body: IoK8sApiAutoscalingV1Scale;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest {
    name: string;
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface ReplaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest {
    name: string;
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface ReplaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest {
    name: string;
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface ReplaceComputeOrdiriComV1alpha1VirtualMachineRestartRequest {
    name: string;
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface ReplaceComputeOrdiriComV1alpha1VirtualMachineStatusRequest {
    name: string;
    body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}

export interface WatchComputeOrdiriComV1alpha1VirtualMachineRequest {
    name: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface WatchComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest {
    name: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface WatchComputeOrdiriComV1alpha1VirtualMachineDeploymentListRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface WatchComputeOrdiriComV1alpha1VirtualMachineListRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface WatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest {
    name: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface WatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetListRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

/**
 * 
 */
export class ComputeOrdiriComV1alpha1Api extends runtime.BaseAPI {

    /**
     * create a VirtualMachine
     */
    async createComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters: CreateComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling createComputeOrdiriComV1alpha1VirtualMachine.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * create a VirtualMachine
     */
    async createComputeOrdiriComV1alpha1VirtualMachine(requestParameters: CreateComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.createComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * create a VirtualMachineDeployment
     */
    async createComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters: CreateComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling createComputeOrdiriComV1alpha1VirtualMachineDeployment.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentFromJSON(jsonValue));
    }

    /**
     * create a VirtualMachineDeployment
     */
    async createComputeOrdiriComV1alpha1VirtualMachineDeployment(requestParameters: CreateComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment> {
        const response = await this.createComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * create a VirtualMachineReplicaSet
     */
    async createComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters: CreateComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling createComputeOrdiriComV1alpha1VirtualMachineReplicaSet.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetFromJSON(jsonValue));
    }

    /**
     * create a VirtualMachineReplicaSet
     */
    async createComputeOrdiriComV1alpha1VirtualMachineReplicaSet(requestParameters: CreateComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet> {
        const response = await this.createComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete collection of VirtualMachine
     */
    async deleteComputeOrdiriComV1alpha1CollectionVirtualMachineRaw(requestParameters: DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete collection of VirtualMachine
     */
    async deleteComputeOrdiriComV1alpha1CollectionVirtualMachine(requestParameters: DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteComputeOrdiriComV1alpha1CollectionVirtualMachineRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete collection of VirtualMachineDeployment
     */
    async deleteComputeOrdiriComV1alpha1CollectionVirtualMachineDeploymentRaw(requestParameters: DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete collection of VirtualMachineDeployment
     */
    async deleteComputeOrdiriComV1alpha1CollectionVirtualMachineDeployment(requestParameters: DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineDeploymentRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteComputeOrdiriComV1alpha1CollectionVirtualMachineDeploymentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete collection of VirtualMachineReplicaSet
     */
    async deleteComputeOrdiriComV1alpha1CollectionVirtualMachineReplicaSetRaw(requestParameters: DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete collection of VirtualMachineReplicaSet
     */
    async deleteComputeOrdiriComV1alpha1CollectionVirtualMachineReplicaSet(requestParameters: DeleteComputeOrdiriComV1alpha1CollectionVirtualMachineReplicaSetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteComputeOrdiriComV1alpha1CollectionVirtualMachineReplicaSetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete a VirtualMachine
     */
    async deleteComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters: DeleteComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling deleteComputeOrdiriComV1alpha1VirtualMachine.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete a VirtualMachine
     */
    async deleteComputeOrdiriComV1alpha1VirtualMachine(requestParameters: DeleteComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete a VirtualMachineDeployment
     */
    async deleteComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters: DeleteComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling deleteComputeOrdiriComV1alpha1VirtualMachineDeployment.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete a VirtualMachineDeployment
     */
    async deleteComputeOrdiriComV1alpha1VirtualMachineDeployment(requestParameters: DeleteComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete a VirtualMachineReplicaSet
     */
    async deleteComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters: DeleteComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling deleteComputeOrdiriComV1alpha1VirtualMachineReplicaSet.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete a VirtualMachineReplicaSet
     */
    async deleteComputeOrdiriComV1alpha1VirtualMachineReplicaSet(requestParameters: DeleteComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get available resources
     */
    async getComputeOrdiriComV1alpha1APIResourcesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1APIResourceList>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1APIResourceListFromJSON(jsonValue));
    }

    /**
     * get available resources
     */
    async getComputeOrdiriComV1alpha1APIResources(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1APIResourceList> {
        const response = await this.getComputeOrdiriComV1alpha1APIResourcesRaw(initOverrides);
        return await response.value();
    }

    /**
     * list or watch objects of kind VirtualMachine
     */
    async listComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters: ListComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineList>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineListFromJSON(jsonValue));
    }

    /**
     * list or watch objects of kind VirtualMachine
     */
    async listComputeOrdiriComV1alpha1VirtualMachine(requestParameters: ListComputeOrdiriComV1alpha1VirtualMachineRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineList> {
        const response = await this.listComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * list or watch objects of kind VirtualMachineDeployment
     */
    async listComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters: ListComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentList>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentListFromJSON(jsonValue));
    }

    /**
     * list or watch objects of kind VirtualMachineDeployment
     */
    async listComputeOrdiriComV1alpha1VirtualMachineDeployment(requestParameters: ListComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentList> {
        const response = await this.listComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * list or watch objects of kind VirtualMachineReplicaSet
     */
    async listComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters: ListComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetList>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetListFromJSON(jsonValue));
    }

    /**
     * list or watch objects of kind VirtualMachineReplicaSet
     */
    async listComputeOrdiriComV1alpha1VirtualMachineReplicaSet(requestParameters: ListComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetList> {
        const response = await this.listComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update the specified VirtualMachine
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachine.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachine.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * partially update the specified VirtualMachine
     */
    async patchComputeOrdiriComV1alpha1VirtualMachine(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.patchComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update the specified VirtualMachineDeployment
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineDeployment.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineDeployment.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentFromJSON(jsonValue));
    }

    /**
     * partially update the specified VirtualMachineDeployment
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineDeployment(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment> {
        const response = await this.patchComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update scale of the specified VirtualMachineDeployment
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRaw(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAutoscalingV1Scale>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineDeploymentScale.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineDeploymentScale.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}/scale`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAutoscalingV1ScaleFromJSON(jsonValue));
    }

    /**
     * partially update scale of the specified VirtualMachineDeployment
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineDeploymentScale(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAutoscalingV1Scale> {
        const response = await this.patchComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update status of the specified VirtualMachineDeployment
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRaw(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineDeploymentStatus.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineDeploymentStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentFromJSON(jsonValue));
    }

    /**
     * partially update status of the specified VirtualMachineDeployment
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineDeploymentStatus(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment> {
        const response = await this.patchComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update the specified VirtualMachineReplicaSet
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineReplicaSet.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineReplicaSet.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetFromJSON(jsonValue));
    }

    /**
     * partially update the specified VirtualMachineReplicaSet
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineReplicaSet(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet> {
        const response = await this.patchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update status of the specified VirtualMachineReplicaSet
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRaw(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatus.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetFromJSON(jsonValue));
    }

    /**
     * partially update status of the specified VirtualMachineReplicaSet
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatus(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet> {
        const response = await this.patchComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update restart of the specified VirtualMachine
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineRestartRaw(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineRestartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineRestart.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineRestart.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}/restart`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * partially update restart of the specified VirtualMachine
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineRestart(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineRestartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.patchComputeOrdiriComV1alpha1VirtualMachineRestartRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update status of the specified VirtualMachine
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineStatusRaw(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineStatus.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchComputeOrdiriComV1alpha1VirtualMachineStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * partially update status of the specified VirtualMachine
     */
    async patchComputeOrdiriComV1alpha1VirtualMachineStatus(requestParameters: PatchComputeOrdiriComV1alpha1VirtualMachineStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.patchComputeOrdiriComV1alpha1VirtualMachineStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read the specified VirtualMachine
     */
    async readComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readComputeOrdiriComV1alpha1VirtualMachine.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * read the specified VirtualMachine
     */
    async readComputeOrdiriComV1alpha1VirtualMachine(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.readComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read the specified VirtualMachineDeployment
     */
    async readComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readComputeOrdiriComV1alpha1VirtualMachineDeployment.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentFromJSON(jsonValue));
    }

    /**
     * read the specified VirtualMachineDeployment
     */
    async readComputeOrdiriComV1alpha1VirtualMachineDeployment(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment> {
        const response = await this.readComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read scale of the specified VirtualMachineDeployment
     */
    async readComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRaw(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAutoscalingV1Scale>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readComputeOrdiriComV1alpha1VirtualMachineDeploymentScale.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}/scale`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAutoscalingV1ScaleFromJSON(jsonValue));
    }

    /**
     * read scale of the specified VirtualMachineDeployment
     */
    async readComputeOrdiriComV1alpha1VirtualMachineDeploymentScale(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAutoscalingV1Scale> {
        const response = await this.readComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read status of the specified VirtualMachineDeployment
     */
    async readComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRaw(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readComputeOrdiriComV1alpha1VirtualMachineDeploymentStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentFromJSON(jsonValue));
    }

    /**
     * read status of the specified VirtualMachineDeployment
     */
    async readComputeOrdiriComV1alpha1VirtualMachineDeploymentStatus(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment> {
        const response = await this.readComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read the specified VirtualMachineReplicaSet
     */
    async readComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readComputeOrdiriComV1alpha1VirtualMachineReplicaSet.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetFromJSON(jsonValue));
    }

    /**
     * read the specified VirtualMachineReplicaSet
     */
    async readComputeOrdiriComV1alpha1VirtualMachineReplicaSet(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet> {
        const response = await this.readComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read status of the specified VirtualMachineReplicaSet
     */
    async readComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRaw(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetFromJSON(jsonValue));
    }

    /**
     * read status of the specified VirtualMachineReplicaSet
     */
    async readComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatus(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet> {
        const response = await this.readComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read restart of the specified VirtualMachine
     */
    async readComputeOrdiriComV1alpha1VirtualMachineRestartRaw(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineRestartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readComputeOrdiriComV1alpha1VirtualMachineRestart.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}/restart`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * read restart of the specified VirtualMachine
     */
    async readComputeOrdiriComV1alpha1VirtualMachineRestart(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineRestartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.readComputeOrdiriComV1alpha1VirtualMachineRestartRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read status of the specified VirtualMachine
     */
    async readComputeOrdiriComV1alpha1VirtualMachineStatusRaw(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readComputeOrdiriComV1alpha1VirtualMachineStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * read status of the specified VirtualMachine
     */
    async readComputeOrdiriComV1alpha1VirtualMachineStatus(requestParameters: ReadComputeOrdiriComV1alpha1VirtualMachineStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.readComputeOrdiriComV1alpha1VirtualMachineStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace the specified VirtualMachine
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachine.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachine.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * replace the specified VirtualMachine
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachine(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.replaceComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace the specified VirtualMachineDeployment
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineDeployment.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineDeployment.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentFromJSON(jsonValue));
    }

    /**
     * replace the specified VirtualMachineDeployment
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineDeployment(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment> {
        const response = await this.replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace scale of the specified VirtualMachineDeployment
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRaw(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAutoscalingV1Scale>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentScale.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentScale.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}/scale`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApiAutoscalingV1ScaleToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAutoscalingV1ScaleFromJSON(jsonValue));
    }

    /**
     * replace scale of the specified VirtualMachineDeployment
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentScale(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAutoscalingV1Scale> {
        const response = await this.replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentScaleRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace status of the specified VirtualMachineDeployment
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRaw(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentStatus.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinedeployments/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeploymentFromJSON(jsonValue));
    }

    /**
     * replace status of the specified VirtualMachineDeployment
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentStatus(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineDeployment> {
        const response = await this.replaceComputeOrdiriComV1alpha1VirtualMachineDeploymentStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace the specified VirtualMachineReplicaSet
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSet.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSet.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetFromJSON(jsonValue));
    }

    /**
     * replace the specified VirtualMachineReplicaSet
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSet(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet> {
        const response = await this.replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace status of the specified VirtualMachineReplicaSet
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRaw(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatus.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachinereplicasets/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSetFromJSON(jsonValue));
    }

    /**
     * replace status of the specified VirtualMachineReplicaSet
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatus(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineReplicaSet> {
        const response = await this.replaceComputeOrdiriComV1alpha1VirtualMachineReplicaSetStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace restart of the specified VirtualMachine
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineRestartRaw(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineRestartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineRestart.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineRestart.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}/restart`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * replace restart of the specified VirtualMachine
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineRestart(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineRestartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.replaceComputeOrdiriComV1alpha1VirtualMachineRestartRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace status of the specified VirtualMachine
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineStatusRaw(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineStatus.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceComputeOrdiriComV1alpha1VirtualMachineStatus.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/virtualmachines/{name}/status`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachineFromJSON(jsonValue));
    }

    /**
     * replace status of the specified VirtualMachine
     */
    async replaceComputeOrdiriComV1alpha1VirtualMachineStatus(requestParameters: ReplaceComputeOrdiriComV1alpha1VirtualMachineStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ComGithubOrdiriOrdiriPkgApisComputeV1alpha1VirtualMachine> {
        const response = await this.replaceComputeOrdiriComV1alpha1VirtualMachineStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch changes to an object of kind VirtualMachine. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling watchComputeOrdiriComV1alpha1VirtualMachine.');
        }

        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/watch/virtualmachines/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch changes to an object of kind VirtualMachine. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachine(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchComputeOrdiriComV1alpha1VirtualMachineRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch changes to an object of kind VirtualMachineDeployment. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling watchComputeOrdiriComV1alpha1VirtualMachineDeployment.');
        }

        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/watch/virtualmachinedeployments/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch changes to an object of kind VirtualMachineDeployment. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineDeployment(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineDeploymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchComputeOrdiriComV1alpha1VirtualMachineDeploymentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch individual changes to a list of VirtualMachineDeployment. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineDeploymentListRaw(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineDeploymentListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/watch/virtualmachinedeployments`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch individual changes to a list of VirtualMachineDeployment. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineDeploymentList(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineDeploymentListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchComputeOrdiriComV1alpha1VirtualMachineDeploymentListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch individual changes to a list of VirtualMachine. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineListRaw(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/watch/virtualmachines`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch individual changes to a list of VirtualMachine. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineList(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchComputeOrdiriComV1alpha1VirtualMachineListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch changes to an object of kind VirtualMachineReplicaSet. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling watchComputeOrdiriComV1alpha1VirtualMachineReplicaSet.');
        }

        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/watch/virtualmachinereplicasets/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch changes to an object of kind VirtualMachineReplicaSet. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineReplicaSet(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchComputeOrdiriComV1alpha1VirtualMachineReplicaSetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch individual changes to a list of VirtualMachineReplicaSet. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineReplicaSetListRaw(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apis/compute.ordiri.com/v1alpha1/watch/virtualmachinereplicasets`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch individual changes to a list of VirtualMachineReplicaSet. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchComputeOrdiriComV1alpha1VirtualMachineReplicaSetList(requestParameters: WatchComputeOrdiriComV1alpha1VirtualMachineReplicaSetListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchComputeOrdiriComV1alpha1VirtualMachineReplicaSetListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
