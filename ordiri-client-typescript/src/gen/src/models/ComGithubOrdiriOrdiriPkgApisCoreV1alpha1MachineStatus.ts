/* tslint:disable */
/* eslint-disable */
/**
 * openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IoK8sApimachineryPkgApisMetaV1Condition } from './IoK8sApimachineryPkgApisMetaV1Condition';
import {
    IoK8sApimachineryPkgApisMetaV1ConditionFromJSON,
    IoK8sApimachineryPkgApisMetaV1ConditionFromJSONTyped,
    IoK8sApimachineryPkgApisMetaV1ConditionToJSON,
} from './IoK8sApimachineryPkgApisMetaV1Condition';

/**
 * MachineStatus defines the observed state of Machine
 * @export
 * @interface ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus
 */
export interface ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus {
    /**
     * The generation observed by the deployment controller.
     * @type {number}
     * @memberof ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus
     */
    ObservedGeneration?: number;
    /**
     * Represents the observations of a foo's current state. Known .status.conditions.type are: "AssignedRole", "Progressing", and "Degraded"
     * @type {Array<IoK8sApimachineryPkgApisMetaV1Condition>}
     * @memberof ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus
     */
    conditions?: Array<IoK8sApimachineryPkgApisMetaV1Condition>;
}

/**
 * Check if a given object implements the ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus interface.
 */
export function instanceOfComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatusFromJSON(json: any): ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus {
    return ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatusFromJSONTyped(json, false);
}

export function ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ObservedGeneration': !exists(json, 'ObservedGeneration') ? undefined : json['ObservedGeneration'],
        'conditions': !exists(json, 'conditions') ? undefined : ((json['conditions'] as Array<any>).map(IoK8sApimachineryPkgApisMetaV1ConditionFromJSON)),
    };
}

export function ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatusToJSON(value?: ComGithubOrdiriOrdiriPkgApisCoreV1alpha1MachineStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ObservedGeneration': value.ObservedGeneration,
        'conditions': value.conditions === undefined ? undefined : ((value.conditions as Array<any>).map(IoK8sApimachineryPkgApisMetaV1ConditionToJSON)),
    };
}

