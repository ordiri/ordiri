/* tslint:disable */
/* eslint-disable */
/**
 * openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaim } from './ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaim';
import {
    ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaimFromJSON,
    ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaimFromJSONTyped,
    ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaimToJSON,
} from './ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaim';

/**
 * 
 * @export
 * @interface ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice
 */
export interface ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice {
    /**
     * 
     * @type {string}
     * @memberof ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice
     */
    address: string;
    /**
     * 
     * @type {ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaim}
     * @memberof ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice
     */
    deviceClaim?: ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaim;
    /**
     * 
     * @type {string}
     * @memberof ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice
     */
    deviceClassName: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice
     */
    deviceName: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice
     */
    vendorName: string;
}

/**
 * Check if a given object implements the ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice interface.
 */
export function instanceOfComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "deviceClassName" in value;
    isInstance = isInstance && "deviceName" in value;
    isInstance = isInstance && "vendorName" in value;

    return isInstance;
}

export function ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceFromJSON(json: any): ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice {
    return ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceFromJSONTyped(json, false);
}

export function ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
        'deviceClaim': !exists(json, 'deviceClaim') ? undefined : ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaimFromJSON(json['deviceClaim']),
        'deviceClassName': json['deviceClassName'],
        'deviceName': json['deviceName'],
        'vendorName': json['vendorName'],
    };
}

export function ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceToJSON(value?: ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDevice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'deviceClaim': ComGithubOrdiriOrdiriPkgApisCoreV1alpha1NodeDeviceClaimToJSON(value.deviceClaim),
        'deviceClassName': value.deviceClassName,
        'deviceName': value.deviceName,
        'vendorName': value.vendorName,
    };
}

